// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package core

import (
	"encoding/json"
	"errors"

	"github.com/ethereum/go-ethereum/common"
)

// MarshalJSON marshals as JSON.
func (g GenesisVote) MarshalJSON() ([]byte, error) {
	type GenesisVote struct {
		TxHash common.Hash `json:"txhash" gencodec:"required"`
		Type   uint8       `json:"type" gencodec:"required"`
	}
	var enc GenesisVote
	enc.TxHash = g.TxHash
	enc.Type = g.Type
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (g *GenesisVote) UnmarshalJSON(input []byte) error {
	type GenesisVote struct {
		TxHash *common.Hash `json:"txhash" gencodec:"required"`
		Type   *uint8       `json:"type" gencodec:"required"`
	}
	var dec GenesisVote
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.TxHash == nil {
		return errors.New("missing required field 'txhash' for GenesisVote")
	}
	g.TxHash = *dec.TxHash
	if dec.Type == nil {
		return errors.New("missing required field 'type' for GenesisVote")
	}
	g.Type = *dec.Type
	return nil
}
